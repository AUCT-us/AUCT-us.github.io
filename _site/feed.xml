<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MarkBruns Tech Blog</title>
    <description>This is my blog about version-controlled social production of open source technology ... feel free to reach out to me and tell me how I can be of service to you!</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 10 Sep 2015 21:03:02 -0500</pubDate>
    <lastBuildDate>Thu, 10 Sep 2015 21:03:02 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Workflow-As-Code ... Toward a Truer Git</title>
        <description>&lt;p&gt;If you want a label, I would label myself as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Anarcho-capitalism&quot;&gt;anarcho-capitalist&lt;/a&gt; … because anyone who really wants to be be labeled as a anarchist needs to not just criticize but practically CREATE a better world.&lt;/p&gt;

&lt;p&gt;In my view, anarchists have to stop whining and start inventing the paths to a truly voluntary and peaceful anarchy.  Irresponsible goofballs will prep for some sort of apocalyptic revolution but that’s an idiotic, destructive waste of time.  There is PRACTICAL HARD REAL work for serious anarchiest to do … we need to get serious and focus on creating a world based on leadership rather than fear, a culture that outgrows, outcompetes without the coercion of the State.  We need to think hard about how we would ever be we able to make truly free markets and private property work without Big Brother.  How would we be able to allocate resources, track ownership of assets, hold each other accountable and establish the necessary TRUST NETWORKS to form the basis of a productive, voluntary culture?&lt;/p&gt;

&lt;p&gt;I do not believe in anarchy because it offers some sort of utopia.  A culture of greater freedom, responsibility and independence will require effort and toughness and it will succeed only through effort and toughness.  The ONLY way for an anarchic revolution to come about is taking the fight directly THROUGH the enemy.  The enemy is our our laziness, numbness, weakness and lack of love.  The anarchic revolution will happen because it has to … it will led by cultures that allow and expect their citizens to be more free, more repsonsible, more independent, more loving … better in every way than we are now.  Those new cultures will always dominate the old antiquated cultures like ours that use fear, intimidation and cultural hate to abuse and undermine the productivity of their own most productive citizens.&lt;/p&gt;

&lt;p&gt;A crytpo-anarchic approach relying upon cryptographic security and blockchain distributed database technology &lt;em&gt;might&lt;/em&gt; help us get there … there are certainly a lot of very smart, very visionary people who see a large role for blockchain distributed database technologies and things related to the &lt;em&gt;culture&lt;/em&gt; of bitcoin. We can expect that the processes that humans go through as they continue to mature and grow up to be responsible anarchists will be messy, chaotic, far from easy. There are probably at least ten billion paths for how we can get to a more anarcho-capitalist world with 50 or 500 years, but we should be looking at and learning from really PRACTICAL examples that are working extremely well for people right now. Survival of the fittest probably requires us to be smart enough to adapt, to create and to love rather than being brutal and numb enough to conquer, destroy and kill.&lt;/p&gt;

&lt;p&gt;We should start by considering how we could manage our work togther without the fear, coercion and threat of firing normally found many workplaces.  &lt;strong&gt;How can more transparent and equitable organizations give professionals more feedback AND control over their workflow?&lt;/strong&gt;”  What if we take the relationships and connections in OUR workflow and reimagined OUR professional project life along data-driven algorithmic critical chain relationships? What would our project management skills and daily look like if ALL of the people with who we were collaborating on the same version-controlled roadmap? The practical experience of the most successful emergent firms on the planet right now suggest that the way that we think about systems and workflow should be driven by a FLOW of work that has been made possible by the &lt;a href=&quot;http://git-scm.com/book/en/v2&quot;&gt;professional use of Git database technology&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is very important to understand that Git is not just about software … Git will change the workflow of ANYONE doing ANY kind knowledge work [if it hasn’t already].&lt;/p&gt;

&lt;p&gt;The Git workflow radically changes or ELIMINATES meetings … conversations about writing/editing/issues in using code/content in repositories gravitate toward a continually transcripted chat-driven 24x7 conversation with repository-centric chat tools like Gitter … Git is also changing the way that professionals are managed [because everyone can see who is doing what when, so team structures get a lot flatter] AND Git changes the way those professionals develop resumes or portfolios of their collaborative work history.&lt;/p&gt;

&lt;p&gt;Git software didn’t exist just a little 10 years ago; it was created for the Linux kernel, but Git’s impact will probably be larger than Linux – because of how Git provides for distributed, decentralized team workflows for geographically-dispersed teams&lt;/p&gt;

&lt;p&gt;Github [the largest host of Git repositories] provides for a common, standardized, hyper-efficient Git workflow … the Github workflow is so efficient because it applies seamlessly as developers or authors switch to OTHER open source projects and other teams that are using GitHub … Github has had a GIGANTIC impact on software development in the last five years and this impact is expanding … all kinds of knowledge workers who write books or develop any kind of content collaboratively are moving to Git and Github  … it is worth reading the account of Github’s rise on Wired magazine to understand the larger significance of what &lt;a href=&quot;http://www.wired.com/tag/github/&quot;&gt;Github&lt;/a&gt; is about.&lt;/p&gt;

&lt;p&gt;With Git all authors participating in a project have version-controlled copies of the entire project repository [or repositories] on their own local machines.  Git manages the edits/revisions while providing full tracking of exactly who did what to the code or text document … Git also retains all branches or forks – ALL of the creation/edit/revision/merge history is there, so there don’t have to be any worries about deletions or unwanted changes.  This allows for COMFORTABLY adopting a radically decentralized, distributed workflow for dispersed teams as well as meshing people with unconventional schedules (eg nightowls collaborating with early-risers and normal people with 9-to-5 jobs who code after hours).&lt;/p&gt;

&lt;p&gt;It is important to reiterate that Github is ONLY one host of open source Git databases … there are other hosts, but there are very solid reasons why Github has rapidly become the largest host using the Git software, not all of those reasons are in the Wired article – one BIG reason is GitHub’s CIO Scott Chacon, how incredibly deep his knowledge of Git was before anyone else’s AND how hard Chacon is now driving Github to increase the depth of its knowledge of Git even further by looking at how GitHub users break the system with edge cases, boundary conditions, runaway code and all sorts of unique issues that pop up on the radar screen of a host with Github’s scale … the Git software that is used for these databases is itself an open source project and there are plenty of other Git hosts who can step in if Github falters or changes.&lt;/p&gt;

&lt;p&gt;If you want to learn more about Git, the best resource is Chacon’s book, ProGit2 … it’s available as a free download for Kindle (mobi) or Apple iBooks (epub) or PDF or HTML5 or … the full source of ProGit2 [prior to publishing] is available as a GitHub repo.  The GitHub guys really “eat their own dog food” when it comes to their fanatical belief in open source and transforming workflows with Git … and their philosophical freeopensourcedness of “giving it all away” has probably caused a lot journos, experts and other dinosaurs to dismiss how big of a deal GitHub is … it is very important to understand that Github and Git are not just about software.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2015 03:30:00 -0500</pubDate>
        <link>/workflow-as-code/2015/09/09/Gitflow-As-Code.html</link>
        <guid isPermaLink="true">/workflow-as-code/2015/09/09/Gitflow-As-Code.html</guid>
        
        
        <category>workflow-as-code</category>
        
      </item>
    
      <item>
        <title>The GitHubification of Professional Life</title>
        <description>&lt;p&gt;&lt;strong&gt;What if we take the relationships and connections in OUR data and reimagined OUR professional efforts and organizations along those data-driven algorithmic relationships? What would that look like?&lt;/strong&gt; Could professionals govern themselves and govern their relationships in a fair, open, transparent equitable manner with smart-contracts and version-controlled [and code-graphed] repositories of the commits they make in their workflow? &lt;strong&gt;How can we build more transparent and equitable organizations that allows professionals to exercise greater control over their daily workflow?&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_law&quot;&gt;Conway’s Law&lt;/a&gt; tells us that &lt;em&gt;organizations which design systems … are constrained to produce designs which are copies of the communication structures of these organizations.&lt;/em&gt;  This means that the organizations which have been trying to produce new innovative products are all going to fail at really changing their products OR their development processes because their organizations are inherently corrupted by old methods, thoroughly calcified and the professional who must develop within this calcified old structure cannot do anything other than produce a new revision of the same old crap that the organization always has produce. Increasing we see that organizations must ACQUIRE new technology rather than develop it themselves … and &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_law&quot;&gt;Conway’s Law&lt;/a&gt; tells us that this is LAW; it might be disappointing, but this is the reality of development.  And professionals that work within the traditional structure are condemned to suffer the doom and stagnation of the traditional structure UNTIL the organization somehow acquires a new methodology or embraces the leadership of a better approach.&lt;/p&gt;

&lt;p&gt;Enter GitHub and the GitHubification of professional work and what has happened in explosively successful companies like &lt;a href=&quot;http://techblog.netflix.com/&quot;&gt;Netflix&lt;/a&gt;. &lt;a href=&quot;http://www.wired.com/2015/03/github-conquered-google-microsoft-everyone-else/&quot;&gt;Open source socially-produced code has arrived&lt;/a&gt; because the most savvy DevOps engineers thoroughly understand why collaborating on an open source team is not only fun and that the collaborative effort also “moves the ball ahead” for everyone … there’s a private intrinsic reward, but with the &lt;a href=&quot;https://help.github.com/categories/graphs-and-contributions/&quot;&gt;GitHub graphs and contributions metrics&lt;/a&gt; there is also the direct professional recognition [and possible financial reward] that comes from the public trail of commits.&lt;/p&gt;

&lt;p&gt;The transparency and code-graphhing of Github is really nothing more than the reliability growth analysis and collecting, modeling, analyzing and interpreting data from the code graph of a open source development program.  We assess the trajectory of the time and money required to develop a solution by looking at the GitHub codegraph … but in order to really understand the GitHub codegraph we need to have an appreciation for &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_(software)&quot;&gt;Git&lt;/a&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_(software)&quot;&gt;history of and rational for distributed version control systems&lt;/a&gt; and the practical nuts-and-bolts of the &lt;a href=&quot;https://youtu.be/FyfwLX4HAxM?list=PLg7s6cbtAD15G8lNyoaYDuKZSKyJrgwB-&quot;&gt;foundations of Git, use Git on the command line and the Github graphical user interfaces&lt;/a&gt;… and of course we should understand the economics of &lt;a href=&quot;https://www.quora.com/What-makes-GitHub-such-an-important-and-strategic-web-property&quot;&gt;what the GitHub social coding ecosystem is about&lt;/a&gt; or how &lt;a href=&quot;http://www.wired.com/2015/03/github-conquered-google-microsoft-everyone-else/&quot;&gt;GitHub conquered Microsoft and Google and everyone else&lt;/a&gt; and what &lt;a href=&quot;https://help.github.com/articles/be-social/&quot;&gt;being social&lt;/a&gt; and then &lt;a href=&quot;https://developer.github.com/program/&quot;&gt;extending Github platform&lt;/a&gt; is about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t worry if this doesn’t make sense yet, it will&lt;/strong&gt; … it will make more and more sense to you as you &lt;strong&gt;use Github&lt;/strong&gt; to collaborate with other developers and use that experience to show you how to evaluate the GitHub codegraphs of various &lt;a href=&quot;https://help.github.com/articles/about-repository-graphs/&quot;&gt;development repositories&lt;/a&gt; and &lt;a href=&quot;https://help.github.com/articles/viewing-contributions-on-your-profile-page/&quot;&gt;developer progress&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Aug 2015 03:30:00 -0500</pubDate>
        <link>/technology/2015/08/28/The-GitHubification-of-Professional-Life.html</link>
        <guid isPermaLink="true">/technology/2015/08/28/The-GitHubification-of-Professional-Life.html</guid>
        
        
        <category>technology</category>
        
      </item>
    
  </channel>
</rss>
