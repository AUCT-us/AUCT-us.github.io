---
layout: post
title:  "Design Sprints"
date:   2018-03-15 4:30:00
categories: Networking
---
A design sprint is a product design or ideation framework for accelerating the process of maximizing the likelihood that a minimum viable product which people want can be efficiently prototyped and produced in that are sufficient to gather the user data sufficient for iterate on subsequent continuous improvements.

# Preparation

This phase begins with very preliminary gathering of business intelligence to determine whether a Design Sprint is even a good idea or necessary ... and if Design Sprint seems like a good idea, what sorts of basic materials, resources and support will be necessary and who should be included in the Design Sprint process. The Preparation phase is perhaps the longest and most crucial phase of the Design Sprint because it involves a lot of noodling, thinkering, private experimentation, playing with ideas and just generally *screwing around*. During this phase, things that nothing but *toy* concepts are important. In order to prepare, it is necessary to PLAY ... this might involve things like setting up different Linux distros on a collection of old junk laptops, playing with Raspberry Pi boards and various IR and camera sensors, flying UAV drones and kites or playing with various configurations of an elastomeric slingshot, experimenting with different sausage recipes and different methodologies for smoking, curing, drying meats ... it all sort of depends on the general area that one plans to explore with a Design Sprint -- the point of PLAY for preparation is to inform one's larger information gathering agenda, which will involve much more reading along with making contact with others in the Design Sprint's general realm, in order to PREPARE intelligently, to assemble those basic materials, resources and support will be necessary and, perhaps most importantly, to specify the *WHY* of the whole thing which will drive general outline of the Design Sprint.

# Understanding

Understanding is the serious, focused homework phase that involves making sure that the Design Sprint participants have achieved a much more complete and thorough understanding of the problem. This is similar to the Prepration phase except that it involved collaboratively exploring and debating what has been done and what should not be attempted. The real point of the Understanding phase is collectively deciding what the point of the Design Sprint is supposed to be and laying the shared foundation for a more likely success of the Design Sprint. Not going beyond the Understanding phase is an option, if the participants cannot or do not want to agree on where their focus will be. Focus is everything -- there's no point in bringing people together to engage in what will probably be a time-wasting clusterfuck. Of course, the Design Sprint should be enjoyable and a good chance to work with others who have a shared interest, but the world is full of other vacation opportunities. In other words, the purpose of the Understanding phase is primarily scope management to achieve a shared agreement on FOCUS the subsequent efforts of the Design Sprint.

# Brainstorming

The Brainstorming phase [sometimes known as Divergence] involves a rather intense and even almost painful process of generating 200 [somewhat relevant ideas]. It is necessary to generate 200 ideas because the first fifty or so ideas will not likely be all that original, ie these first-off, easily brainstormed ideas will basically be regurgitations of what has been tried but hasn't work and isn't going to ever work ... but yet it's still necessary to get these ideas on the table for various reasons, eg to cleanse everyone's mental palate, to generate other ideas. Of course, in the process of generating the next one hundred or fifty so ideas, it will be necessary to generate a lot of ideas that far too wild, goofy and just flat out laughable to be explored in any serious depth, but these ideas might be the most valuable. Part of that value is in the humor and enjoyment that the ideas provide to make the process tolerable and to strengthen the interpersonal bonds between the participants.  It is easier to think when one is laughing, but perhaps more importantly, humor provides a source of connection and friendship between the participants that will reward the participants in the future, even if the Design Sprint never yields a viable product.  The most significant value of ludicrous ideas though is in how they serve to make participants in the Design Sprint question their assumptions, ie if any idea is ludicrous, exactly WHY is it ludicrous? Is it really ludicrous, or are our assumptions ludicrous.

# Convergence

The Convergence phases involves putting ideas from the brainstorming phase together into potentially workable prototype ideas. It also involves setting up the designed experiment that will test different factors in competing prototypes. In this way, the Convergence phase is akin to set-based concurrent engineering in that the objective of the phase is a workable, buildable set of perhaps four to eight prototype concepts ... of course the number of prototypes will depend on the resource, budget and time constraints along with the requirements of building a usable prototype, but the number will also depend on the quality of the idea set.

# Prototyping

The Prototying phase is about actually building usable, WORKING prototypes or possibly mocked-up modifications of current off-the-shelf products that can be used in the Design Sprint Testing phase. These prototypes are definitely early alpha-level, or maybe even pre-alpha if more alpha iterations prove necessary, ie it may be necessary to have a subsequent Prototype phase after the Iteration phase. In the Prototyping phase, we are working with the very most minimal versions of what might evolve [after Testing and possibly more Prototyping iterations] into the output of the Design Sprint.  The objective here is to produce something conceptual, not-ready-for-full-prime-time, but realistic enough to actually be used in a real-world setting.

# Testing

The output of Testing phase will be a recommendation for a Minimal Viable Product design [or perhaps even pair of MVP designs] that can be produced [with production tooling/machines, for physical products] in very small production quantities for a program of beta-testing by pre-qualified, early-adopter users for actual real-world trials and comparisons. In order to have a successful Testing phase, it is necessary that the beta-testing be carried out with some semblance of comparative rigor and data collection. This involves qualifying and edu cating beta testers, but it also involves setting up the processes to acquire data in a manner that is not too taxing on the beta testers and does not interfere or get in the way of the real-world use by the beta testers. The beta testers should be able to use the product as if they had purchased it with the intentions of really putting it work.

# Iteration

The recommendations for the Minimal Viable Product are actually produced [on production tooling, for physical products] in the Iteration phase. Depending upon the maturity of the design [and other requirements necessary for the broader use of a full-blown, unqualified production Release, such as regulatory compliance or other company testing requirements] the Iteration phase may stay in a beta form for some time with a very limited [but larger than the Testing phase's] population of qualified beta users.  At this point, the product concept and the artifacts of the Design Sprint are handed-off and other continuous improvement methodologies such as LEAN mfg, Agile, Scrum, Continuous Delivery come into play.   
