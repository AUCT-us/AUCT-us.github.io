---
layout: post
title:  "The GitHubification of Professional Life"
date:   2015-08-28 8:30:00
categories: Technology
---
**What if we take the relationships and connections in OUR data and reimagined OUR professional efforts and organizations along those data-driven algorithmic relationships? What would that look like?** Could professionals govern themselves and govern their relationships in a fair, open, transparent equitable manner with smart-contracts and version-controlled [and code-graphed] repositories of the commits they make in their workflow? **How can we build more transparent and equitable organizations that allows professionals to exercise greater control over their daily workflow?**"

[Conway's Law](https://en.wikipedia.org/wiki/Conway%27s_law) tells us that *organizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations.*  This means that the political organizations and Parties that have been trying to elect political leaders, ie the Democrats, the GOP, the third Party efforts, are all going to fail at changing government because their organizations are inherently corrupted by old politicos, thoroughly calcified and cannot do anything other than produce the same old crap that they always have.

Enter GitHub and the GitHubification of professional work. [Open source socially-produced code has arrived](http://www.wired.com/2015/03/github-conquered-google-microsoft-everyone-else/) because the most savvy DevOps engineers thoroughly understand why collaborating on an open source team is not only fun and that the collaborative effort also "moves the ball ahead" for everyone ... there's a private intrinsic reward, but with the [GitHub graphs and contributions metrics](https://help.github.com/categories/graphs-and-contributions/) there is also the direct professional recognition [and possible financial reward] that comes from the public trail of commits.  

The transparency and code-graphhing of Github is really nothing more than the reliability growth analysis and collecting, modeling, analyzing and interpreting data from the code graph of a open source development program.  We assess the trajectory of the time and money required to develop a solution by looking at the GitHub codegraph ... but in order to really understand the GitHub codegraph we need to have an appreciation for [Git](https://en.wikipedia.org/wiki/Git_(software)) and the [history of and rational for distributed version control systems](https://en.wikipedia.org/wiki/Git_(software)) and the practical nuts-and-bolts of the [foundations of Git, use Git on the command line and the Github graphical user interfaces](https://youtu.be/FyfwLX4HAxM?list=PLg7s6cbtAD15G8lNyoaYDuKZSKyJrgwB-)... and of course we should understand the economics of [what the GitHub social coding ecosystem is about](https://www.quora.com/What-makes-GitHub-such-an-important-and-strategic-web-property) or how [GitHub conquered Microsoft and Google and everyone else](http://www.wired.com/2015/03/github-conquered-google-microsoft-everyone-else/) and what [being social](https://help.github.com/articles/be-social/) and then [extending Github platform](https://developer.github.com/program/) is about.  
